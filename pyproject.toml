[project]
name = "saas-backend-framework"
version = "0.1.0"
description = "Production-grade FastAPI backend framework for scalable SaaS applications"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Core Framework
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic[email]>=2.9.0",
    "pydantic-settings>=2.6.0",

    # Database
    "sqlalchemy>=2.0.35",
    "alembic>=1.13.3",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.10",

    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[argon2]>=1.7.4",
    "argon2-cffi>=23.1.0",
    "python-multipart>=0.0.12",
    "authlib>=1.3.2",
    "python-keycloak>=4.5.1",
    "pyotp>=2.9.0",
    "qrcode[pil]>=7.4.2",

    # Background Tasks
    "celery>=5.4.0",
    "flower>=2.0.1",
    "redis>=5.2.0",

    # HTTP & Integrations
    "httpx>=0.27.2",
    "openai>=1.54.0",
    "aiohttp>=3.10.10",
    "boto3>=1.35.0",
    "pillow>=10.4.0",

    # Payments
    "stripe>=13.0.0",

    # Utilities
    "python-dotenv>=1.0.1",
    "orjson>=3.10.10",
    "python-dateutil>=2.9.0",
    "pytz>=2024.2",
    "user-agents>=2.2.0",

    # Security & Monitoring
    "slowapi>=0.1.9",
    "safety>=3.2.8",
    "bandit>=1.7.10",
    "prometheus-fastapi-instrumentator>=7.0.0",

    # Logging
    "structlog>=25.4.0",
    "python-json-logger>=3.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.2",
    "faker>=30.8.2",
    "black>=24.10.0",
    "ruff>=0.7.3",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "watchfiles>=0.21.0",  # For auto-reload in Docker dev
]
cli = [
    "typer>=0.9.0",
    "rich>=13.7.0",
    "httpx>=0.27.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.2",
    "faker>=30.8.2",
    "black>=24.10.0",
    "ruff>=0.7.3",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "watchfiles>=0.21.0",  # For auto-reload in Docker dev
]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B", "A", "C4", "DTZ", "T10", "ISC", "ICN", "PIE", "PT", "RSE", "RET", "SIM", "ARG", "PTH", "ERA", "PD", "PL", "NPY", "RUF"]
ignore = ["E501", "PLR0913", "PLR2004"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]
